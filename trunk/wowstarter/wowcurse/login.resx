<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAACAgAAABACAAqBAAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAIAE
        AAAAAAAAAAAAAAABAAAAAAAAAAAAAP///wCAgIAAAACAAACAgADg4OAAQKAAAGBgYACgoKAAIEBgAEDA
        IABAYIAAAMCgACDgwAAA4P8AAAAgACAgIABgQCAAgEAgAGBAQACAYEAAwIBgAMCggAAAoIAAoMDgAIBg
        oACgYKAAYCDAAGCg4ABAIAAAgGAgAMBgIACgYEAAICBgAACgYAAgQIAAYGCAAGCAgADAoMAAYMDgAGDA
        IACAACAA4AAgAGDgQACgAEAAwCBAAGDgYABgAGAAgGBgAGAAgABg4KAAwICgAICgoABgQMAAoIDAAKDA
        wADg4P8A+Pj4ANjY2AAYGCAAIFiIABgYGABYQDgA6OjoACAYGAAgWJAAuLi4AAgIEAAoGBAAMBgQACgg
        GAAgUHgAyMDAABAYIAAQGCgASDgoAFhAMABoSEAAWGhwAKCYmACwqKgAuLCwAMC4uAAYEAgAKBAIACAg
        GABAMCgAYEA4ACA4QABgSEAAeFhAAGhQSAB4YFAAIEhwABhAeAAYSHgAIEh4ACg4gAAwaIAAWHiAACBg
        mACoqKgAwMC4AMjIyAAwoOgACAAAACAIAAAICAgAIBAIADAYCABAGAgACBAQABgQEAAgGBAAKCAQADgg
        EABAIBgAQCgYAEgoGAAIECAAQCggABggKAAgKCgAOCgoAFBAKAAIGDAAICgwAEg4MABYODAAYEg4AGhI
        OABwSDgAGDBAAFhIQABoUEAAYFBIAHBQSABwWEgAeFhIAGBYUAB4WFAAmGhQAEhQWABQWFgAGDhgAEhg
        YAA4UGgAUGBoAGBoaABoaGgAsIBoAHhwcAAoWHgAOFh4AHB4eAB4eHgAgHh4ABhIgAAgUIgAKGCIADBw
        iADIoIgAGGCQAGh4kABYgJAAaICQAJiQkABomJAAmJiQACBYmAAoYJgAOICYAHCImAB4iJgAYJCYAChw
        oACooKAAKGioADB4qAA4gKgASKCwAEiosAD40LgAQJjAADB4yAA4qMgAOGDQADCo0ABIsNAAOKDYAEio
        2AA4sNgAQLjYAFDA2AA4wOAAQMjgADjY4AA4mOgAOLjoADjQ6AA44OgAQODoADjY8AA44PAAQOjwADjo
        +ABw6PgAgPj/ABAIAAAwCAAAOAgAAAAACAAwCAgAMBAIADgYCAAoIAgAAAgQACgQEAA4GBAAQBgQAEgo
        EAAIABgAEBAYABgQGAAQGBgAMCAYADggGABQIBgAMCgYADgoGABQKBgAAAggACAYIAAoICAAKCggADAo
        IAA4KCAASCggABAQKAAIGCgAGBgoACAgKAA4MCgASDAoAFA4KABYOCgAcEgoABAYMAAYIDAAQDgwAGhA
        MAAgKDgAODg4AEA4OABIODgAIEA4AAAAAAAAAAAAAAA6Qk8CnJeXlwJPUjoAAAAAAAAAAAAAAAAAAAAA
        AABnqJWOkpJioKuroE6PB6ZnAAAAAAAAAAAAAAAAAAA6pgeSRzyfr7O3vMHBwby1YwemOgAAAAAAAAAA
        SGZIUZeSnjw8QZ+fmJiYYrS8J87PJ06VUUhCSAAAAEKjC6SRXTw8PF2EO3BT0GnTQ3eEs87Pz66OpAul
        SAAAsK64okc8QUd+bGpUREREcENDQ9jThCfPzrSduK5RAABQNLSQPEEJRkVF2URF1kVEbHBvd+/nQ6TO
        waCzrlIAAEJOmDxkCXV4dpmqYWELQOieYWEjR0p92GInvGKPSAAACJJBZAlzgEzjjsq3vbhpPb+9s7hg
        b/d93avAt45lADoCn0FH5PNXV+b8zL69vUN6yb23uEdrSff3O7S5q5sAUmOqPPx4Pk0+25LMur7F91jN
        uLy4sWtJSffuCbezk0KwC0Fd9FdNWUvVtMq6wMUh/829ybi4bz07Svfwq7KZqK2qPAn1PldNgHvLw7jH
        xmGrxmjMvrjecDs7eUoJr5+XrUGe/Fc+TT50/M2/savGscTFr8TDxXlTPTs7SoSfPJSlQWD5TIaJf9SZ
        zWix/8K6xMVYxMfFCW1APTtJ+DyeTqOpXUyGiFl/27TKaKpyyLjDuBDEysU8betAPTs7R55OpWRdg4xc
        XFo+ycJoR9LJt72qVLXNvbFFVkY9PTtHnk6sqkdbXDCNWo/Nv7hYbq7CuF3Rq829uOF44UA9EF+dTq2v
        oouWllv6Y8y4uEZ2kcqp/G6Ozb246njsRkDxX56aprOvTpYwPoOuybGxRPOFyGFWc/zNv7pYdetAcVhf
        RwIIq7JiWomIXMHAuqpyTEy/YeV4e8e7uglzQEBTCV6ST1Kkua+LjYqLx7e6mXyM9qRhdX90u79hYddG
        cXpeXo5COgK3u6AgWpPHuLqOWlxai/xLPtuyaGFhVUZykF4JmjoAUGO5u5PmsyfPuIWNjY2Cez6F3KDK
        zxyQbFhekI5lAABnlKu/uZKRJaenh5YWjVlbh1lLY66rY/x+nV6QlToAAGessbPDwJUglpahoaEwMFyJ
        h4VL4lRqfkFf97KlOgAAOqMcrrzJzjRStra2oY2NMFxciVl8VpKxqWC0HJo6AAA6CCeuk7XPzsE0UaG2
        oaGhllqChY6yuLKZYyc0CAAAAABnsFBlm67Oz84ntKQCApyUkqu5u7mzkwJRQmYAAAAAAAAAAAAACJqn
        JyfJysrHx8fHwry0Y5tQAAAAAAAAAAAAAAAAAAAAOlACmqS0tbS0tK6lAk9SBQAAAAAAAAAAAAAAAAAA
        AAAAAAAASFFQUFFCSAAAAAAAAAAAAAAAAAD/wAP//wAA//wAAD/AAAADgAAAAYAAAAGAAAABgAAAAYAA
        AAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA
        AAGAAAABgAAAAYAAAAGAAAADwAAAB/4AAH//AAD///Af/ygAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAA
        AAAAAAAAAAAAAAAAAADy8vIQ8vLyEPLy8hDy8vIQ8vLyEPLy8hDy8vIQ8/PzC/Ly8gHp6elD1dXVXbu6
        uYOfm5nVioSB6H13deh5c3HoeHJx6Hx0c+iIgX/onpqZ1b28u4LX19db6enpQwAAAADz8/ML8vLyEPLy
        8hDy8vIQ8vLyEPLy8hDy8vIQ8vLyEPLy8hDy8vIQ8/PzD/Pz8w/z8/MQ9PT0DPPz8wHo6OgzyMfGppeV
        kvpmZmb/SVFa/zdPY/8vVm7/L2aD/zNviv85epT/QH6X/0R0h/9LaXb/T1RZ/2ZjY/+YkpL6ysnIpenq
        6jHz8/MB9PT0DPPz8xDz8/MP8/PzD/Ly8hDy8vIQ8vLyEPLy8gvx8fEE8vLyBAAAAADu7u4W09PTZpiU
        keJaW13/NUtj/yNTev8hVoT/I2CO/ytxnP8yhbD/PJnD/0et0/9Nttj/UL3f/0+92/9Qs87/VKq7/1V2
        f/9cWl7/mJOT4NbX1mPv7+8WAAAAAPLy8gXx8fEF8vLyC/Ly8hHx8fEL39/fSMLBwK/AvbmvycTBq7Gw
        rsRybmz/OlBm/yNRgf8eVYv/HliK/yJdjf8lZpD/KGKH/yhYdv8rWnL/Llxx/zRrgf9Fkar/ULHN/1rR
        7f9w7v//f/L//3DBxv9YcHf/b2pp/7SxsMTGwb6ru7m0sMTCwrDh4uJE8vLyCe/u7hW6u7fmY3aS/0Jn
        mP9SgqH/Q1Zi/yxNcf8fV4z/HlWL/yBYi/8fSGz/GjBB/xgZHf8ZExT/FQwG/w8JA/8IAwL/AwII/wUI
        Dv8HEiH/FjZH/0GMpP914PL/g/j//4Lt9v9dkpj/PkVQ/017lv8+W4z/a4GU/8LBvuXx8fES7+/vFqmk
        ou1ekab/KXjL/xVdkv8hT3j/IFaI/x9Zjf8hUHv/Hyoy/x4QBv8fCQD/JA8G/yoUDf8oFRD/JBYS/xcT
        Ef8KDA7/BwsR/wUKEv8BBg7/AAAN/xkwPP9nusP/gfr//2/l9f9GmLD/DU6I/zF6xv9ek6D/t7Kv7PLy
        8hTy8vITs6uq6mqlsf9MjqX/GTpj/yJYif8gXJP/I0Vi/ysfFv8wGhD/MRcS/yoSDf8lFQ//MRgO/zcU
        C/8wGRL/KhUQ/yAOB/8VEA3/DA8R/woSHf8LFib/AQsd/wQED/9IhY7/YN31/1G+2P83bo//QoGh/16M
        mv/CvLrq9PT0EvT09BK5tbPqU211/yhUeP8iW4v/IF+U/yxHXv9BKhr/RCkf/0UmG/84Wnb/MFeg/yk4
        ff8tPHv/OluE/x0XGP8hGx7/Kk6O/yc0gP8kOXj/KkV+/yVMdf8MGyr/CBUu/wIAEv83cID/U8nm/0iw
        zP8yaXz/TFZc/8TDwen09PQS7e3tFKKenOs+U2n/IluP/yNflf8lR2X/OSIQ/1c6L/9bPTL/TyEW/zhN
        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
        Kf9Ka5b/ODt5/z4tEv9LOjT/PCAW/zCbzv8wsdr/Ljak/ys0f/8oHAj/Kh8b/yMYD/8eJij/FkJ2/xg/
        dP9KU17/vLu4tNvY2GSAgoX8QJSz/yuax/8zcov/lF5G/35QMv9GZmv/Msfw/zR4u/8yV8b/TU1N/3dX
        Q/9/YFP/fFM8/1xTXP81NUD/RTQm/1RDO/9BHw//M3uo/ySm6f8oOI3/IDOk/yIfF/8rHxT/JyAT/xs6
        X/8TPXX/IT5n/3J0dP3Z2dhp7u7uDq6nptJSdYH/NqXG/yqcxf9MYGb/XS0Q/zt/tP9izvT/ovD7/0p5
        zP9PR0P/mmtP/5BqWP+WaFT/ZUU6/zksJ/9XQzv/VkY+/0krE/80bpT/TMj//6ft9/9ijtX/ITRp/x8R
        AP8gMkL/FEB3/xQ3af9BSlj/q6mn0+3t7hH19fUGzs3MXWNlav80g5n/NrLO/zmry/84Tlr/SmJj/16I
        hP9rmo//apWN/1ZSS/+jfGb/vJWA/5BtXP9gST//Zk9E/2JQRf9cTkL/RzYn/0Z2e/9QlYv/QoiH/0iA
        ev8wRkP/Hyo0/xlFf/8SOm//HjhV/2drav/S0dFb9fX1BfX19QXTz81cboeW/zNoqP81h6f/Qcbg/0G+
        3P9mcnD/qmZI/7iCa/+0jnb/vqGL/8+0nP/FnYb/hWJV/4NnVv92Y1L/a1lL/2NSRf9aTkL/RTUn/zcj
        F/8rEgn/HQYA/yErMv8iVZD/GEZ8/w8eQv8ycKz/c4GI/9nX1lb19fUF9fX1BdPRzl1oeIz/W53m/2WY
        tP9DrsX/Utvz/17Y8f95qrP/zbin//vSuP/10rn/7dG6/8mjif+fdF//mHVi/4twXf92Z1P/dmdU/21W
        Sf9eTTz/Tj0q/z8vJf8uTGj/KG2o/yJal/8lSnX/ZJ2z/1CZ5f9wdH3/2dnYWfX19QX19fUE2djWW5Ka
        ov94s8f/YZep/0xib/9erLT/f+/9/3Dm+f9cw9P/equi/8azpv/buZ3/6Lac/+Szlv/nrZL/5KWL/7CB
        Z/95W0L/aEs7/1VJPf85SFf/L3Wk/y2GwP8wfLP/NVV1/1l1gf94t8b/gam7/52fpfXi4eFC9PT0B/Pz
        8wzp6eksycjHg6ijofKuqqn+q6em/Xl2d/9ojZX/fd3n/3zx/v9t4/n/V8zf/0ajsv9Qfor/eZCD/4iN
        g/9/e3b/YmZp/zhdZv80fJX/MZ7G/zKk0f80nsz/OYKq/09hb/+Efnv/s7GvoLq2tYLBvryB29vaT+7u
        7gvy8vIQ8vLyEfLy8gzx8fEG7+/vJfLy8inw8fEm2tnYQaKdnMZwdXj/bpie/3nLzv9j1Oj/Sdfy/znb
        9f8y1/D/MNDs/y/M6/8wzO3/Os7w/z7A4v8/sdH/RZy3/1t1g/98e3z/sq6svuDg3zTy8vIN9PT0BPT0
        9ATz8/MH8vLyEPLy8hDy8vIQ8vLyEPPz8w/z8/ML8/PzC/T09Arz8/MI6urqINXU03Ctp6bhgX5//Gt3
        ff9bgIz/T5Wl/0ums/9IobD/S6Sz/06ks/9XkaP/ZYON/32EifyclZT8vrm44N3c223s7Owd8/PzCPPz
        8w7z8/MP8/PzD/Ly8hDy8vIQ8vLyEPLy8hDy8vIQ8vLyEPLy8hDy8vIQ8vLyEPLy8hDz8/MM9PT0Ae/v
        7yDk5OMv1NHQRcW9vH+6srK0sq2turGsrLq2sbC6u7a1usi/v3bTzMpH4N7dMuvr6yrv7+8gAAAAAPPz
        8w3y8vIQ8vLyEPLy8hDy8vIQ8vLyEPLy8hDy8vIQAAABAAAAAAAIAAAQAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQA=
</value>
  </data>
</root>